apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration["androidCompileSdkVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]

        applicationId globalConfiguration["androidApplicationId"]
        minSdkVersion globalConfiguration["androidMinSdkVersion"]
        targetSdkVersion globalConfiguration["androidTargetSdkVersion"]
        versionCode globalConfiguration["androidVersionCode"]
        versionName globalConfiguration["androidVersionName"]
        testInstrumentationRunner globalConfiguration["testInstrumentationRunner"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
//    def presentationTestDependencies = rootProject.ext.presentationTestDependencies

    implementation project(':domain')
    implementation project(':data')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api presentationDependencies.daggerCompiler
    implementation presentationDependencies.dagger
//    compile presentationDependencies.butterKnife
    implementation presentationDependencies.recyclerView
    implementation presentationDependencies.rxJava
    implementation presentationDependencies.rxAndroid
    compileOnly presentationDependencies.javaxAnnotation

//    androidTestImplementation presentationTestDependencies.mockito
//    androidTestImplementation presentationTestDependencies.dexmaker
//    androidTestImplementation presentationTestDependencies.dexmakerMockito
//    androidTestImplementation presentationTestDependencies.espresso
//    androidTestImplementation presentationTestDependencies.testingSupportLib
}
